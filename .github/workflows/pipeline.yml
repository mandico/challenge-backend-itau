name: Pipeline Challenge

on:
  push:
    branches:
      - main
    paths:
      - 'code/**'
      - 'chart/**'

jobs:
  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest

    steps:
    - name: ⬇️ Checkout code
      uses: actions/checkout@v2

    - name: ⚙️ Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.22.2'

    - name: ⚙️ Cache Go modules
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: ⚙️ Install dependencies
      run: go mod download
      working-directory: code

    - name: 🏃‍♂️ Run tests
      run: go test -v ./...
      working-directory: code

    - name: 🏗️ Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: 👮 Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: 🏗️ Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: code
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/challenge:${{ github.sha }}

  deploy:
    name: 🚀 Deployment
    runs-on: ubuntu-latest
    needs: build
      
    steps:
    - name: ⬇️ Checkout code
      uses: actions/checkout@v2
      
    - name: 👮 Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.ARM_CREDS }}
      
    - name: ⚙️ Set up Kubernetes
      run: |
        az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}
      
    - name: ⚙️ Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      
    - name: 🚀 Deploy to AKS using Helm
      working-directory: chart
      run: |
        helm upgrade --install challenge -n challenge ./challenge --create-namespace --set image.repository=${{ secrets.DOCKER_HUB_USERNAME }}/challenge --set image.tag=${{ github.sha }}